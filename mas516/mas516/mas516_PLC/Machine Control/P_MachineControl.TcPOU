<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="P_MachineControl" Id="{a90e0789-57c0-407b-b2f1-afc96a165b42}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_MachineControl
VAR
	fbManualControlWinch 		: FB_ManualControl;
	fbManualControlCyl	 		: FB_ManualControl;
	fbAutomaticControlWinch 	: FB_AutomaticControl;
	fbAutomaticControlCyl	 	: FB_AutomaticControl;
	fWinchControlSignalManual 			: LREAL;
	fCylControlSignalManual 			: LREAL;
	fWinchControlSignalAuto 			: LREAL;
	fCylControlSignalAuto				: LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[G_Work.bManualMode := G_Inputs.bManualModeSelector;
G_Work.bAutoMode := G_Inputs.bAutoModeSelector;

G_Work.bWinchEnable := (G_Hmi.bWinchEnable AND G_Inputs.bJoystickEnable);
G_Work.bCylEnable :=  (G_Hmi.bCylEnable AND G_Inputs.bJoystickEnable);

fbManualControlWinch(
	bEnable := G_Work.bManualMode AND G_Work.bWinchEnable,
	fInput := G_Sensors.fJoystickNormalizedY*-G_Parameters.fWinchSpeedReducerGain,
	fControlRefSignal => fWinchControlSignalManual
);

fbManualControlCyl(
	bEnable := G_Work.bManualMode AND G_Work.bCylEnable,
	fInput := G_Sensors.fJoystickNormalizedX*G_Parameters.fCylSpeedReducerGain,
	fControlRefSignal => fCylControlSignalManual
);

fbAutomaticControlWinch(
	bEnable := G_Work.bAutoMode AND G_Hmi.bWinchEnable,
	bStartMotion := G_Inputs.bStartButton,
	bStopMotion := G_Inputs.bStopButton,
	stValveOutputGeneratorSettings := G_Parameters.stWinchValveOutputGeneratorSettings,
	fNormalizedValveOpeningRefSignal => fWinchControlSignalAuto,
	fTime => G_Work.fWinchTime
);

fbAutomaticControlCyl(
	bEnable := G_Work.bAutoMode AND G_Hmi.bCylEnable,
	bStartMotion := G_Inputs.bStartButton,
	bStopMotion := G_Inputs.bStopButton,
	stValveOutputGeneratorSettings := G_Parameters.stCylValveOutputGeneratorSettings,
	fNormalizedValveOpeningRefSignal => fCylControlSignalAuto,
	fTime => G_Work.fCylTime
);

IF G_Work.bManualMode THEN
	G_Work.fWinchControlInput := fWinchControlSignalManual;
	G_Work.fCylControlInput := fCylControlSignalManual;
ELSIF G_Work.bAutoMode THEN
	G_Work.fWinchControlInput := fWinchControlSignalAuto;
	G_Work.fCylControlInput := -fCylControlSignalAuto;
ELSE
	G_Work.fWinchControlInput := 0.0; 
	G_Work.fCylControlInput := 0.0;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="P_MachineControl">
      <LineId Id="5" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="107" Count="1" />
      <LineId Id="104" Count="0" />
      <LineId Id="110" Count="4" />
      <LineId Id="109" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="86" Count="3" />
      <LineId Id="98" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="91" Count="5" />
      <LineId Id="99" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="137" Count="2" />
      <LineId Id="144" Count="0" />
      <LineId Id="140" Count="1" />
      <LineId Id="145" Count="0" />
      <LineId Id="142" Count="1" />
      <LineId Id="147" Count="0" />
      <LineId Id="136" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>