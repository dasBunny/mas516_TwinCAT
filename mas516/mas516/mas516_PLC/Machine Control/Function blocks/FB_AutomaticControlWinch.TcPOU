<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_AutomaticControlWinch" Id="{fd6f8a87-c5d5-4f70-8249-2b0de500d6fe}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AutomaticControlWinch
VAR_INPUT
	bEnable 							: BOOL;
	bStartMotion 						: BOOL;
	bStopMotion 						: BOOL;
	stMotionReferenceGeneratorSettings  : ST_MotionReferenceGeneratorSettings;
	stAutomaticControlSettings 			: ST_AutomaticControlSettings;
	stClosedLoopControlSettings 		: ST_ClosedLoopControlSettings;
	stOpenLoopControlSettings			: ST_OpenLoopControlSettings;
	stParam 							: ST_Parameters; 
	fPositionFeedback					: LREAL;
	rWinchPosRad						: REAL;
	fbHeightCalc						: WinchAngle;
	rActPos								: REAL;
	rSetPos								: REAL;
END_VAR
VAR_OUTPUT
	fTime : LREAL;
	fVelocityReference_ms : LREAL;
	fPositionReference_m : LREAL;
	fControlOutputNormalized : LREAL;
	fPositionError_mm : LREAL;
END_VAR
VAR
	fbClock : FB_Clock;	
	fbMotionReferenceGenerator 		: FB_MotionReferenceGenerator_limit;	
	fbVelocityFeedForwardControl 	: FB_FeedForwardWinch;
	fbResetIntegralController 		: FB_ResetIntegralController; 
	fbClosedLoopPositionControl 	: FB_CylController;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbClock(
	bEnable := bEnable,
	bStart := bStartMotion,
	bStop := bStopMotion,
	fCycleTime := G_Parameters.stParam.fCyclicTime
);

fbMotionReferenceGenerator(
	bEnable := bEnable,
	stMotionReferenceGeneratorSettings := stMotionReferenceGeneratorSettings,
	fClock_s := fbClock.fTime
);

fbVelocityFeedForwardControl(
	bEnable := stAutomaticControlSettings.bEnableVelocityFeedForwardControl,
	fInput_ms := fbMotionReferenceGenerator.fVelocityReference_ms,
	fDisplacment_cc := stParam.fDisplacment_cc,
	stOpenLoopControlSettings := stOpenLoopControlSettings,
	rCircumference := 0.07 * 3.14,
	rTransmission := 1.0
);

fbResetIntegralController(
	stClosedLoopControlSettings := stClosedLoopControlSettings,
	fPositionError_m := fbClosedLoopPositionControl.xCylErrormm,
	fVelocityReference_ms := fbMotionReferenceGenerator.fVelocityReference_ms
);

rWinchPosRad := 3.141 * G_Sensors.fWinchEncoderPosition / 180; 
fbHeightCalc(
	xCyl := G_Sensors.fPositionCylPiston,
	winchAngleRad :=rWinchPosRad,
	hZero := G_HeightCorrection.rZeroOffset,
	wheelHeight := 0.330,
	totalDistance := 1.451,
	spoolRadius := 0.04575);
	
G_HeightCorrection.rActual := fbHeightCalc.height;

IF G_HeightCorrection.xCorrectHeight=TRUE THEN
	rSetPos := G_HeightCorrection.rDesiredHeight;
	rActPos := G_HeightCorrection.rActual;
ELSE
	rSetPos := fbMotionReferenceGenerator.fPositionReference_m;
	rActPos := G_HeightCorrection.rActual;
END_IF


fbClosedLoopPositionControl(
	EnablePFC := stAutomaticControlSettings.bEnableClosedLoopPositionControl,
	PosRefm := rSetPos,
	VRefms := fbMotionReferenceGenerator.fVelocityReference_ms,
	PosFbm := rActPos,
	propGain := stClosedLoopControlSettings.fProportionalGain,
	integralGain := stClosedLoopControlSettings.fIntegralGain,
	maxPosError := stClosedLoopControlSettings.fMaxPositionError,
	EnableIntegral := stAutomaticControlSettings.bEnableIntegralController,
	ssMethodType := BOOL_TO_SINT(bEnable AND bStartMotion)
);

fVelocityReference_ms := fbMotionReferenceGenerator.fVelocityReference_ms;
fPositionReference_m := fbMotionReferenceGenerator.fPositionReference_m;
fTime := fbClock.fTime;
fPositionError_mm := fbClosedLoopPositionControl.xCylErrormm/1E3;

IF bEnable THEN
	fControlOutputNormalized := LIMIT(-1.0, (fbVelocityFeedForwardControl.fNormalizedOutput + fbClosedLoopPositionControl.SetValue), 1.0);
ELSE
	fControlOutputNormalized := 0.0;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="FB_AutomaticControlWinch">
      <LineId Id="189" Count="4" />
      <LineId Id="24" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="314" Count="0" />
      <LineId Id="312" Count="0" />
      <LineId Id="413" Count="1" />
      <LineId Id="80" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="62" Count="3" />
      <LineId Id="57" Count="0" />
      <LineId Id="357" Count="0" />
      <LineId Id="359" Count="0" />
      <LineId Id="363" Count="6" />
      <LineId Id="372" Count="2" />
      <LineId Id="370" Count="0" />
      <LineId Id="375" Count="0" />
      <LineId Id="381" Count="0" />
      <LineId Id="377" Count="1" />
      <LineId Id="382" Count="0" />
      <LineId Id="376" Count="0" />
      <LineId Id="360" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="341" Count="7" />
      <LineId Id="165" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="246" Count="0" />
      <LineId Id="248" Count="1" />
      <LineId Id="252" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="143" Count="1" />
      <LineId Id="142" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>