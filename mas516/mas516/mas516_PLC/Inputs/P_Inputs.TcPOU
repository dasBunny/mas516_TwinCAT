<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="P_Inputs" Id="{8b676dbd-393f-42d6-8803-330b6e90ab14}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Inputs
VAR
	fbJoystickWinch 			: FB_JoystickInputScaling;
	fbJoystickCyl 				: FB_JoystickInputScaling;
	fbWinchPosition 			: FB_Encoder;
	fbCylPistonPosition 		: FB_AnalogInputScaling;
	fbPressureSupply 			: FB_AnalogInputScaling;
	fbPressureReturn 			: FB_AnalogInputScaling;
	fbPressureCylPistonSide 	: FB_AnalogInputScaling;
	fbPressureCylLhvSide 		: FB_AnalogInputScaling;
	fbPressureCylRodSide		: FB_AnalogInputScaling;
	fbPressureWinchInput 		: FB_AnalogInputScaling;
	fbPressureWinchLhvSide 		: FB_AnalogInputScaling;
	fbPressureWinchOutput		: FB_AnalogInputScaling;
	fbPressureWinchDrain		: FB_AnalogInputScaling;
	
	
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbJoystickWinch(
	bEnable := G_Inputs.bManualModeSelector,
	nRawInput := G_Inputs.stJoyY.nValue,
	fNormalizedOutput => G_Sensors.fJoystickNormalizedY
);

fbJoystickCyl(
	bEnable := G_Inputs.bManualModeSelector,
	nRawInput := G_Inputs.stJoyX.nValue,
	fNormalizedOutput => G_Sensors.fJoystickNormalizedX
);

fbWinchPosition (
nRawInput := G_Inputs.nEncoderValue, 
fPosition => G_Sensors.fWinchEncoderPosition,
);

G_Sensors.fWinchWirePosition := fbWinchPosition.fPosition*G_Parameters.fWinchDrumRadius;

fbCylPistonPosition(
	nRawInput := G_Inputs.stPositionCylPiston.nValue,
	fOutput => G_Sensors.fPositionCylPiston
);

fbPressureSupply(
	nRawInput := G_Inputs.stPressureSupply.nValue,
	fOutput => G_Sensors.fPressureSupply
);

fbPressureReturn(
	nRawInput := G_Inputs.stPressureReturn.nValue,
	fOutput => G_Sensors.fPressureReturn
);

fbPressureCylPistonSide(
	nRawInput := G_Inputs.stPressureCylPistonSide.nValue,
	fOutput => G_Sensors.fPressureCylPistonSide
);

fbPressureCylLhvSide(
	nRawInput := G_Inputs.stPressureCylLhvSide.nValue,
	fOutput => G_Sensors.fPressureCylLhvSide
);

fbPressureCylRodSide(
	nRawInput := G_Inputs.stPressureCylRodSide.nValue,
	fOutput => G_Sensors.fPressureCylRodSide
);

fbPressureWinchInput(
	nRawInput := G_Inputs.stPressureWinchInput.nValue,
	fOutput => G_Sensors.fPressureWinchInput
);

fbPressureWinchLhvSide(
	nRawInput := G_Inputs.stPressureWinchLhvSide.nValue,
	fOutput => G_Sensors.fPressureWinchLhvSide
);

fbPressureWinchOutput(
	nRawInput := G_Inputs.stPressureWinchOutput.nValue,
	fOutput => G_Sensors.fPressureWinchOutput
);

fbPressureWinchDrain(
	nRawInput := G_Inputs.stPressureWinchDrain.nValue,
	fOutput => G_Sensors.fPressureWinchDrain
);

]]></ST>
    </Implementation>
    <LineIds Name="P_Inputs">
      <LineId Id="5" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="8" Count="0" />
      <LineId Id="128" Count="4" />
      <LineId Id="127" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="20" Count="3" />
      <LineId Id="7" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="40" Count="3" />
      <LineId Id="45" Count="3" />
      <LineId Id="44" Count="0" />
      <LineId Id="50" Count="3" />
      <LineId Id="49" Count="0" />
      <LineId Id="55" Count="3" />
      <LineId Id="54" Count="0" />
      <LineId Id="60" Count="3" />
      <LineId Id="59" Count="0" />
      <LineId Id="105" Count="14" />
      <LineId Id="133" Count="0" />
      <LineId Id="121" Count="3" />
      <LineId Id="104" Count="0" />
      <LineId Id="38" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>